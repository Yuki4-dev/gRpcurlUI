name: .NET Core Desktop Build Exe

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]
        targetPlatform: [x64]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      App_Name: gRpcurlUI
      Appx_Bundle: AppPackages
      Solution_Name: gRpcurlUI.sln
      Project_Path: gRpcurlUI\gRpcurlUI.csproj
      Project_Directory: gRpcurlUI
      Test_Directory: gRpcurlUI.Test    

    steps:
      # Dump for debug workflow
    - name: Dump Github Context
      env:
        GitHub_Context: ${{ toJson(github) }}
      run: echo "${GitHub_Context}"
    
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Execute all unit tests in the solution
    # - name: Execute unit tests
    #   run: dotnet test

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Decode the base 64 encoded pfx and save the Signing_Certificate
    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Build exe
      run: msbuild $env:Project_Path /t:publish /p:PublishDir=\bin\publish /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration
      
    # Remove the pfx
    - name: Remove the pfx
      run: Remove-Item -path $env:Wap_Project_Directory\GitHubActionsWorkflow.pfx

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: Build exe - ${{ matrix.targetplatform }}
        path: ${{ env.Project_Directory }}\bin\publish
