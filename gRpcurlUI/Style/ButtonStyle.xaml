<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:style="clr-namespace:gRpcurlUI.Style">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="SolidColorBrushStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <style:IconSizeConverter x:Key="IconConverter" />

    <Style x:Key="DefaultButtonStyle" TargetType="ButtonBase">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">

                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{StaticResource DefaultPageForeground}"
                            Text="{TemplateBinding Content}" />

                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DefaultMouseOverBackground}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style
        x:Key="DefaultTextButtonStyle"
        BasedOn="{StaticResource DefaultButtonStyle}"
        TargetType="ButtonBase">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">

                    <Grid Margin="{TemplateBinding Padding}">

                        <TextBlock
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{DynamicResource DefaultPageForeground}"
                            Text="{TemplateBinding Content}" />

                        <Border
                            x:Name="UnderLine"
                            Height="1"
                            VerticalAlignment="Bottom"
                            BorderBrush="{DynamicResource DefaultPageForeground}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Visibility="Collapsed" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="UnderLine" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="CheckedToggleButtonTemplate" TargetType="ToggleButton">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">

            <StackPanel Margin="0,4,0,4" Orientation="Horizontal">

                <Canvas Width="30" Height="20">

                    <Path
                        Width="30"
                        Height="20"
                        Data="{StaticResource Checked}"
                        Fill="{DynamicResource DefaulIconBrush}"
                        Stretch="Uniform" />
                </Canvas>

                <TextBlock
                    VerticalAlignment="Center"
                    FontSize="{TemplateBinding FontSize}"
                    FontWeight="{TemplateBinding FontWeight}"
                    Foreground="{DynamicResource DefaultPageForeground}"
                    Text="{TemplateBinding Content}" />

            </StackPanel>
        </Border>
    </ControlTemplate>

    <Style x:Key="CheckedToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <StackPanel Margin="0,4,0,4" Orientation="Horizontal">

                            <Canvas Width="30" Height="20">

                                <Path
                                    Width="30"
                                    Height="20"
                                    Data="{StaticResource Check}"
                                    Fill="{DynamicResource DefaulIconBrush}"
                                    Stretch="Uniform" />
                            </Canvas>

                            <TextBlock
                                VerticalAlignment="Center"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{DynamicResource DefaultPageForeground}"
                                Text="{TemplateBinding Content}" />

                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template" Value="{StaticResource CheckedToggleButtonTemplate}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <ControlTemplate x:Key="IconButtonTemplate" TargetType="{x:Type ButtonBase}">

        <Border Background="{TemplateBinding Background}">

            <Viewbox Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">

                <Canvas
                    Width="{TemplateBinding Width,
                                            Converter={StaticResource IconConverter}}"
                    Height="{TemplateBinding Height,
                                             Converter={StaticResource IconConverter}}"
                    Margin="4"
                    HorizontalAlignment="Center"
                    Background="{TemplateBinding Background}">

                    <Path
                        Width="{TemplateBinding Width,
                                                Converter={StaticResource IconConverter}}"
                        Height="{TemplateBinding Height,
                                                 Converter={StaticResource IconConverter}}"
                        Data="{TemplateBinding Tag}"
                        Fill="{TemplateBinding Foreground}"
                        Stretch="Uniform" />

                </Canvas>

            </Viewbox>

        </Border>

    </ControlTemplate>

    <Style x:Key="IconButtonStyle" TargetType="ButtonBase">

        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource DefaulIconBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template" Value="{StaticResource IconButtonTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DefaultMouseOverBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="OparetionAreaStackPanelStyle" TargetType="StackPanel">
        <Setter Property="Height" Value="32" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>

    <Style x:Key="DefaultGridSplitterStyle" TargetType="GridSplitter">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{StaticResource DefaulBorderBrush}" />
    </Style>

</ResourceDictionary>