<ComboBox
    x:Class="gRpcurlUI.Controls.CustomComboBox"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:gRpcurlUI.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    d:DesignHeight="50"
    d:DesignWidth="300"
    Background="Transparent"
    BorderBrush="Black"
    ItemContainerStyle="{DynamicResource CustomComboBoxItemContainerStyle}"
    Template="{DynamicResource ComboBoxTemplate}"
    mc:Ignorable="d">

    <ComboBox.Resources>

        <Geometry x:Key="ToggleButton.DoropDownArrow">M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z</Geometry>
        <Geometry x:Key="ToggleButton.DoropDownArrow.IsChecked">M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z</Geometry>

        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">

            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="ClickMode" Value="Press" />
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">

                        <Border
                            x:Name="RootBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding ButtonCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}">

                            <Path
                                x:Name="DropDownArrow"
                                Margin="0,0,6,6"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Data="{StaticResource ToggleButton.DoropDownArrow}"
                                Fill="{TemplateBinding Foreground}" />

                        </Border>

                        <ControlTemplate.Triggers>

                            <!--  IsMouseOver  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="RootBorder" Property="Background" Value="{Binding MouseOverBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" />
                            </MultiDataTrigger>

                            <!--  IsChecked  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="RootBorder" Property="Background" Value="{Binding IsCheckedBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" />
                            </MultiDataTrigger>

                            <!--  IsChecked  -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="DropDownArrow" Property="Data" Value="{StaticResource ToggleButton.DoropDownArrow.IsChecked}" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>

            </Setter>

        </Style>

        <DataTemplate x:Key="SelectionBoxItemTemplate">

            <TextBlock FontSize="{Binding FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" Text="{Binding .}" />

        </DataTemplate>

        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">

            <Grid x:Name="templateRoot" HorizontalAlignment="Stretch">

                <ToggleButton
                    x:Name="ComboBoxToggleButton"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxToggleButton}" />

                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="true"
                    IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PopupAnimation="Slide">

                    <theme:SystemDropShadowChrome
                        x:Name="Shadow"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        CornerRadius="{Binding PopupCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                        Color="Transparent">

                        <Border
                            x:Name="DropDownBorder"
                            MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Margin="1"
                            Background="{Binding PopupBackground, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                            BorderBrush="{Binding PopupBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                            BorderThickness="{Binding PopupBorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                            CornerRadius="{Binding PopupCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}">

                            <local:CustomScrollViewer TabBrush="{Binding PopupScrollBarBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" VerticalScrollBarVisibility="Auto">
                                <StackPanel RenderOptions.ClearTypeHint="Enabled">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </StackPanel>
                            </local:CustomScrollViewer>

                        </Border>

                    </theme:SystemDropShadowChrome>
                </Popup>

                <ContentPresenter
                    x:Name="contentPresenter"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding SelectionBoxItem}"
                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                    ContentTemplate="{StaticResource SelectionBoxItemTemplate}"
                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                    IsHitTestVisible="false"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>

            <ControlTemplate.Triggers>

                <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                    <Setter TargetName="Shadow" Property="Margin" Value="0,0,5,5" />
                    <Setter TargetName="Shadow" Property="Color" Value="#71000000" />
                </Trigger>

                <Trigger Property="HasItems" Value="false">
                    <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                </Trigger>

                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </MultiTrigger>

            </ControlTemplate.Triggers>

        </ControlTemplate>

        <ControlTemplate x:Key="CustomComboBoxItemContainerStyle.Tab" TargetType="{x:Type ComboBoxItem}">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="12" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Border
                    x:Name="Bd"
                    Margin="4,4,0,4"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{Binding ItemSelectCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                    SnapsToDevicePixels="true" />

                <Border Grid.Column="1" Background="Transparent">
                    <ContentPresenter
                        Margin="{Binding ItemMargin, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Border>
            </Grid>

            <ControlTemplate.Triggers>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                </Trigger>

                <!--  IsSelected  -->
                <Trigger Property="IsSelected" Value="True">
                    <Setter TargetName="Bd" Property="Background" Value="{Binding SelectedItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" />
                    <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding SelectedItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" />
                </Trigger>

                <!--  IsMouseOver  -->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="IsSelected" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="Bd" Property="Background" Value="{Binding MouseOverItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" />
                    <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding MouseOverItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" />
                </MultiTrigger>

                <!--  IsKeyboardFocused  -->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsKeyboardFocused" Value="True" />
                        <Condition Property="IsSelected" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="Bd" Property="Background" Value="{Binding MouseOverItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" />
                    <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding MouseOverItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" />
                </MultiTrigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="CustomComboBoxItemContainerStyle" TargetType="{x:Type ComboBoxItem}">

            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">

                        <Border
                            x:Name="Bd"
                            Margin="{Binding ItemMargin, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding ItemSelectCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                            SnapsToDevicePixels="true">

                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        </Border>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>

                            <!--  IsSelected  -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{Binding SelectedItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding SelectedItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" />
                            </Trigger>

                            <!--  IsMouseOver  -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{Binding MouseOverItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding MouseOverItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" />
                            </Trigger>

                            <!--  IsKeyboardFocused  -->
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{Binding MouseOverItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding MouseOverItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" />
                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectVisual, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}" Value="Tab">
                    <Setter Property="Template" Value="{StaticResource CustomComboBoxItemContainerStyle.Tab}" />
                </DataTrigger>
            </Style.Triggers>

        </Style>

    </ComboBox.Resources>

</ComboBox>
